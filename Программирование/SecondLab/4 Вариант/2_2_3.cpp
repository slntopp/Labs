// ZEBRA 2_2_3 VARIANT 4
#include <iostream> // подключение библиотеки iostream для cout|cin

using namespace std; // используем пространство имен std

int main() { // функция main
	setlocale(LC_ALL, "Russian"); // подключаем русский язык, чтобы не было иероглифов :3

	int n, m; // обьявляем переменные целочисленного типа n и m, *условие.
	double a1, pam = 1; // переменные вещественного типа double, которые далее понадобятся нам в циклах
	double a2, pa2m = 1;
	double a3, pan1m = 1;
	double a4, panm = 1;
	double result;

	cout << "Введите натуральное число n:" << endl; // вывод на экран данного текста, endl - перевод курсора на новую строку
	cin >> n; // ввод значения n
	if (n <= 0) { // т.к n- натуральное(1,2,3,...), по условию, нужно проверять правильность ввода данных. Используем условный оператор if(если n меньше или равно 0, будет выполнятся условие в скобках)
		while (n <= 0) { // цикл while (пока n меньше или равно 0, будет выполнятся условие в скобках)
			cout << "Ошибка!Повторите ввод:" << endl; // вывод на экран данного текста
			cin >> n; // ввод значения n
		}
	}
	cout << "Введите натуральное число m:" << endl; // вывод данного текста на экран
	cin >> m; // ввод значения m
	if (m <= 0) { // условный оператор if
		while (m <= 0) { // цикл while
			cout << "Ошибка!Повторите ввод:" << endl; // вывод данного текста на экран
			cin >> m; // ввод значения m
		}
	}
	
	cout << "Вводите последовательность:" << endl; // вывод данного текста на экран

	for (int i = 1; i <= m; i++) { // Цикл for для первого слогаемого (От i=1, пока i <= m прибавляем единичку к i) + обьявление переменной целочисленого типа i
		cin >> a1; // ввод последовательности
		pam *= a1; // перемножение членов последовательности из первого слогаемого ^[ b*=a ~ b=b*a ]^
	}

	cout << "1-ое cлогаемое: " << pam << endl; // вывод данного текста на экран и значения первого слогаемого

	for (int j = m + 1; j <= 2 * m; j++) { // Цикл for для второго слогаемого (От j=m+1, пока j <= 2*m прибавляем единичку к j[Интервалы из условия]) + обьявление переменной целочисленого типа j
		cin >> a2; // ввод последовательности
		pa2m *= a2; // перемножение членов последовательности из второго слогаемого ^[ b*=a ~ b=b*a ]^
	}

	cout << "2-ое cлогаемое: " << pa2m << endl; // вывод данного текста на экран и значения второго слогаемого
	
	if ((n - 1)*m > 2 * m + 1) { // условный оператор if.Используем его т.к мы не знаем, какое m и n введет пользователь.
		for (int p = 2 * m + 1; p <= (n - 1)*m; p++) { // Цикл for для третьего слогаемого (От p=2*m+1, пока p <= (n-1)*m прибавляем единичку к p[Интервалы из условия]) + обьявление переменной целочисленого типа p
			cin >> a3; // ввод последовательности
			pan1m *= a3; // перемножение членов последовательности из третьего слогаемого ^[ b*=a ~ b=b*a ]^
		}
	}
	else { pan1m = 0; } // Если не выполняется if () {}  то выполняется else {}
	cout << "3-е cлогаемое: " << pan1m << endl; // вывод данного текста на экран и значения третьего слогаемого

	if (n*m > (n - 1)*m + 1) {// условный оператор if.Используем его т.к мы не знаем, какое m и n введет пользователь.
		for (int q = (n - 1)*m + 1; q <= n*m; q++) {// Цикл for для третьего слогаемого (От q=(n-1)*m+1, пока q <= n*m прибавляем единичку к q[Интервалы из условия]) + обьявление переменной целочисленого типа q
			cin >> a4; // ввод последовательности
			panm *= a4; // перемножение членов последовательности из четвертого слогаемого ^[ b*=a ~ b=b*a ]^
		}
	} else {panm = 0;} // Если не выполняется if () {}  то выполняется else {}

	cout << "4-ое cлогаемое: " << panm << endl; // вывод данного текста на экран и значения четвертого слогаемого

	cout << "СУММА: " << panm + pam + pa2m + pan1m << endl; // вывод результата (суммы всех слогаемых)

	system("pause"); // команда задержки экрана
	return 0; // возвращаем 0
}